/* Large Devices, Wide Screens */

@media only screen and (max-width: 1200px) {
  .container {
    max-width: 960px;
  }
}

/* Medium Devices, Desktops */

@media only screen and (max-width: 992px) {
  header.with-background .top-nav,
  header .top-nav {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }

  header.with-background .top-nav .logo,
  header .top-nav .logo {
    margin: auto;
  }

  header.with-background .top-nav ul,
  header .top-nav ul {
    margin: 20px auto 0;
    width: 80%;
  }

  header.with-background .hero,
  header .hero {
    grid-template-columns: 1fr;
    text-align: center;
  }

  header.with-background .hero .hero-image,
  header .hero .hero-image {
    padding-left: 0;
    margin-top: 40px;
  }

  .featured-section {
    padding: 50px 0;
  }

  .featured-section .products {
    grid-template-columns: 1fr;
  }

  .blog-section .blog-posts {
    grid-template-columns: 1fr;
    text-align: center;
    grid-template-areas: "blog3" "blog2" "blog1";
  }

  .blog-section .blog-posts .blog-post {
    margin-top: 30px;
  }

  .footer-content {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }

  .footer-content .made-with {
    margin: auto;
  }

  .footer-content ul {
    margin: 20px auto;
    width: 60%;
  }

  .breadcrumbs {
    text-align: center;
  }

  .breadcrumbs .breadcrumbs-container {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }

  .search-form {
    margin: 14px auto;
    width: 80%;
  }

  .products-section {
    grid-template-columns: 1fr;
  }

  .products-section .sidebar {
    text-align: center;
  }

  .products-section .products {
    grid-template-columns: 1fr;
  }

  .product-section {
    grid-template-columns: 1fr;
  }

  .might-like-section .might-like-grid {
    grid-template-columns: 1fr;
  }

  .cart-section {
    grid-template-columns: 1fr;
  }

  .cart-section .cart-buttons {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    text-align: center;
  }

  .cart-section .cart-table-row .cart-table-row-left {
    width: 30%;
  }

  .cart-section .cart-table-row .cart-table-row-right {
    width: 55%;
  }

  .cart-section .cart-table-row img {
    display: none;
  }

  .cart-section .have-code-container {
    width: 100%;
  }

  .cart-section .cart-totals {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }

  .cart-section .cart-totals .cart-totals-left {
    width: 100%;
    margin-bottom: 20px;
  }

  .cart-section .cart-totals .cart-totals-right {
    width: 100%;
  }

  .checkout-section {
    grid-template-columns: 1fr;
  }

  .checkout-section .checkout-table-container {
    margin-left: 10px;
  }
}

/* Small Devices, Tablets */

/* Extra Small Devices, Phones */

/* Custom, iPhone Retina */


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL3Nhc3MvRDovUHJvZ3JhbWlyYW5qZS9QSFAvQ29kZS9lLWNvbW1lcmNlLWxhcmF2ZWwvcmVzb3VyY2VzL2Fzc2V0cy9zYXNzL3Jlc291cmNlcy9hc3NldHMvc2Fzcy9yZXNwb25zaXZlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2Fzc2V0cy9zYXNzL0Q6L1Byb2dyYW1pcmFuamUvUEhQL0NvZGUvZS1jb21tZXJjZS1sYXJhdmVsL3Jlc3BvbnNpdmUuc2NzcyIsIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL3Nhc3MvcmVzcG9uc2l2ZS5zY3NzIiwid2VicGFjazovLy8uL3Jlc291cmNlcy9hc3NldHMvc2Fzcy9EOi9Qcm9ncmFtaXJhbmplL1BIUC9Db2RlL2UtY29tbWVyY2UtbGFyYXZlbC9yZXNvdXJjZXMvYXNzZXRzL3Nhc3MvcmVzcG9uc2l2ZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBO0VBQ0k7SUFDSTtHQ0VMO0NBQ0Y7O0FERUQ7O0FBQ0E7RUFDSTs7SUFFUTtJQUFBO1FBQUE7WUFBQTtHQ0VUOztFREpDOztJQUtZO0dDSWI7O0VEVEM7O0lBU1k7SUFDQTtHQ0tiOztFRGZDOztJQWNRO0lBQ0E7R0NNVDs7RURyQkM7O0lBa0JVO0lBQ0E7R0NRWDs7RURIQztJQUNJO0dDTUw7O0VEUEM7SUFJSTtHQ09MOztFREhDO0lBRUk7SUFDQTtJQUNBLCtDRVNDO0dEQVA7O0VDR0E7SUFDRSxpQkFBaUI7R0RBbkI7O0VDR0E7SUFDRSw2QkRIQTtJQ0lBLDhCREpBO1FERkE7WUVRUSx1QkFBdUI7R0RIakM7O0VDTUE7SUFDRSxhQUFhO0dESGY7O0VDTUE7SUZGRTtJRUlBLFdBQVc7R0RIYjs7RUNNQTtJQUNFLG1CQUFtQjtHREhyQjs7RUNNQTtJQUNFLDZCRE5BO0lDT0EsOEJEUEE7UURFQTtZRU9RLHVCQUF1QjtHRE5qQzs7RUNTQTtJRkxFO0lFT0EsV0FBVztHRE5iOztFQ1NBO0lBQ0UsMkJBQTJCO0dETjdCOztFQ1NBO0lBQ0UsbUJBQW1CO0dETnJCOztFQ1NBO0lBQ0UsMkJBQTJCO0dETjdCOztFQ1NBO0lBQ0UsMkJBQTJCO0dETjdCOztFQ1NBO0lBQ0UsMkJBQTJCO0dETjdCOztFQ1NBO0lBQ0UsMkJBQTJCO0dETjdCOztFQ1NBO0lBQ0UsNkJEVEE7SUNVQSw4QkRWQTtRQUNBLDJCQUFtQjtZRFBuQjtJRW1CQSxtQkFBbUI7R0RUckI7O0VDWUE7SUFDRSxXQUFXO0dEVGI7O0VDWUE7SUFDRSxXQUFXO0dEVGI7O0VDWUE7SUFDRSxjQUFjO0dEVGhCOztFQ1lBO0lBQ0UsWUFBWTtHRFRkOztFQ1lBO0lBQ0UsNkJEWkE7SUNhQSw4QkRiQTtRRDNCQTtZRTBDUSx1QkFBdUI7R0RaakM7O0VDZUE7SUY3Q0U7SUUrQ0Esb0JBQW9CO0dEWnRCOztFQ2VBO0lBQ0UsWUFBWTtHRFpkOztFQ2VBO0lBQ0UsMkJBQTJCO0dEWjdCOztFQ2VBO0lGSkY7R0VNRztDRkRIOztBQUtBOztBR3BEQTs7QUR1REEsMkJBQTJCIiwiZmlsZSI6IlxcY3NzXFxyZXNwb25zaXZlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIExhcmdlIERldmljZXMsIFdpZGUgU2NyZWVucyAqL1xyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGggOiAxMjAwcHgpIHtcclxuICAgIC5jb250YWluZXIge1xyXG4gICAgICAgIG1heC13aWR0aDogOTYwcHg7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG4vKiBNZWRpdW0gRGV2aWNlcywgRGVza3RvcHMgKi9cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoIDogOTkycHgpIHtcclxuICAgIGhlYWRlci53aXRoLWJhY2tncm91bmQsIGhlYWRlciB7XHJcbiAgICAgICAgLnRvcC1uYXYge1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cclxuICAgICAgICAgICAgLmxvZ28ge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB1bCB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IDIwcHggYXV0byAwO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAuaGVybyB7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICAgICAgICAgICAuaGVyby1pbWFnZSB7XHJcbiAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIG1hcmdpbi10b3A6IDQwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmZlYXR1cmVkLXNlY3Rpb24ge1xyXG4gICAgICAgIHBhZGRpbmc6IDUwcHggMDtcclxuXHJcbiAgICAucHJvZHVjdHMge1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuYmxvZy1zZWN0aW9uIHtcclxuICAgICAgLmJsb2ctcG9zdHMge1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWFyZWFzOlxyXG4gICAgICAgICAgICBcImJsb2czXCJcclxuICAgICAgICAgICAgXCJibG9nMlwiXHJcbiAgICAgICAgICAgIFwiYmxvZzFcIjtcclxuXHJcbiAgICAgICAgLmJsb2ctcG9zdCB7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5mb290ZXItY29udGVudCB7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHJcbiAgICAgICAgLm1hZGUtd2l0aCB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHVsIHtcclxuICAgICAgICAgICAgbWFyZ2luOiAyMHB4IGF1dG87XHJcbiAgICAgICAgICAgIHdpZHRoOiA2MCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5icmVhZGNydW1icyB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgICAgICAuYnJlYWRjcnVtYnMtY29udGFpbmVyIHtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnNlYXJjaC1mb3JtIHtcclxuICAgICAgICBtYXJnaW46IDE0cHggYXV0bztcclxuICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgfVxyXG5cclxuICAgIC5wcm9kdWN0cy1zZWN0aW9uIHtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcclxuXHJcbiAgICAgICAgLnNpZGViYXIge1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAucHJvZHVjdHMge1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnByb2R1Y3Qtc2VjdGlvbiB7XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XHJcbiAgICB9XHJcblxyXG4gICAgLm1pZ2h0LWxpa2Utc2VjdGlvbiAubWlnaHQtbGlrZS1ncmlkIHtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcclxuICAgIH1cclxuXHJcbiAgICAuY2FydC1zZWN0aW9uIHtcclxuXHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XHJcblxyXG4gICAgICAgIC5jYXJ0LWJ1dHRvbnMge1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuY2FydC10YWJsZS1yb3cge1xyXG5cclxuICAgICAgICAgICAgLmNhcnQtdGFibGUtcm93LWxlZnQge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDMwJTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLmNhcnQtdGFibGUtcm93LXJpZ2h0IHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA1NSU7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmhhdmUtY29kZS1jb250YWluZXIge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5jYXJ0LXRvdGFscyB7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblxyXG4gICAgICAgICAgICAuY2FydC10b3RhbHMtbGVmdCB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC5jYXJ0LXRvdGFscy1yaWdodCB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG5cclxuICAgIC5jaGVja291dC1zZWN0aW9uIHtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcclxuXHJcbiAgICAgICAgLmNoZWNrb3V0LXRhYmxlLWNvbnRhaW5lciB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLyogU21hbGwgRGV2aWNlcywgVGFibGV0cyAqL1xyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGggOiA3NjhweCkge1xyXG5cclxufVxyXG5cclxuLyogRXh0cmEgU21hbGwgRGV2aWNlcywgUGhvbmVzICovXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aCA6IDQ4MHB4KSB7XHJcblxyXG59XHJcblxyXG4vKiBDdXN0b20sIGlQaG9uZSBSZXRpbmEgKi9cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoIDogMzIwcHgpIHtcclxuXHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL2Fzc2V0cy9zYXNzL0Q6L1Byb2dyYW1pcmFuamUvUEhQL0NvZGUvZS1jb21tZXJjZS1sYXJhdmVsL3Jlc291cmNlcy9hc3NldHMvc2Fzcy9yZXNvdXJjZXMvYXNzZXRzL3Nhc3MvcmVzcG9uc2l2ZS5zY3NzIiwiLyogTGFyZ2UgRGV2aWNlcywgV2lkZSBTY3JlZW5zICovXG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTIwMHB4KSB7XG4gIC5jb250YWluZXIge1xuICAgIG1heC13aWR0aDogOTYwcHg7XG4gIH1cbn1cblxuLyogTWVkaXVtIERldmljZXMsIERlc2t0b3BzICovXG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkycHgpIHtcbiAgaGVhZGVyLndpdGgtYmFja2dyb3VuZCAudG9wLW5hdixcbiAgaGVhZGVyIC50b3AtbmF2IHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG5cbiAgaGVhZGVyLndpdGgtYmFja2dyb3VuZCAudG9wLW5hdiAubG9nbyxcbiAgaGVhZGVyIC50b3AtbmF2IC5sb2dvIHtcbiAgICBtYXJnaW46IGF1dG87XG4gIH1cblxuICBoZWFkZXIud2l0aC1iYWNrZ3JvdW5kIC50b3AtbmF2IHVsLFxuICBoZWFkZXIgLnRvcC1uYXYgdWwge1xuICAgIG1hcmdpbjogMjBweCBhdXRvIDA7XG4gICAgd2lkdGg6IDgwJTtcbiAgfVxuXG4gIGhlYWRlci53aXRoLWJhY2tncm91bmQgLmhlcm8sXG4gIGhlYWRlciAuaGVybyB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG5cbiAgaGVhZGVyLndpdGgtYmFja2dyb3VuZCAuaGVybyAuaGVyby1pbWFnZSxcbiAgaGVhZGVyIC5oZXJvIC5oZXJvLWltYWdlIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXRvcDogNDBweDtcbiAgfVxuXG4gIC5mZWF0dXJlZC1zZWN0aW9uIHtcbiAgICBwYWRkaW5nOiA1MHB4IDA7XG4gIH1cblxuICAuZmVhdHVyZWQtc2VjdGlvbiAucHJvZHVjdHMge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICB9XG5cbiAgLmJsb2ctc2VjdGlvbiAuYmxvZy1wb3N0cyB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwiYmxvZzNcIlxyIFwiYmxvZzJcIlxyIFwiYmxvZzFcIjtcbiAgfVxuXG4gIC5ibG9nLXNlY3Rpb24gLmJsb2ctcG9zdHMgLmJsb2ctcG9zdCB7XG4gICAgbWFyZ2luLXRvcDogMzBweDtcbiAgfVxuXG4gIC5mb290ZXItY29udGVudCB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxuXG4gIC5mb290ZXItY29udGVudCAubWFkZS13aXRoIHtcbiAgICBtYXJnaW46IGF1dG87XG4gIH1cblxuICAuZm9vdGVyLWNvbnRlbnQgdWwge1xuICAgIG1hcmdpbjogMjBweCBhdXRvO1xuICAgIHdpZHRoOiA2MCU7XG4gIH1cblxuICAuYnJlYWRjcnVtYnMge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuXG4gIC5icmVhZGNydW1icyAuYnJlYWRjcnVtYnMtY29udGFpbmVyIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG5cbiAgLnNlYXJjaC1mb3JtIHtcbiAgICBtYXJnaW46IDE0cHggYXV0bztcbiAgICB3aWR0aDogODAlO1xuICB9XG5cbiAgLnByb2R1Y3RzLXNlY3Rpb24ge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICB9XG5cbiAgLnByb2R1Y3RzLXNlY3Rpb24gLnNpZGViYXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuXG4gIC5wcm9kdWN0cy1zZWN0aW9uIC5wcm9kdWN0cyB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gIH1cblxuICAucHJvZHVjdC1zZWN0aW9uIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgfVxuXG4gIC5taWdodC1saWtlLXNlY3Rpb24gLm1pZ2h0LWxpa2UtZ3JpZCB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gIH1cblxuICAuY2FydC1zZWN0aW9uIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgfVxuXG4gIC5jYXJ0LXNlY3Rpb24gLmNhcnQtYnV0dG9ucyB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICAuY2FydC1zZWN0aW9uIC5jYXJ0LXRhYmxlLXJvdyAuY2FydC10YWJsZS1yb3ctbGVmdCB7XG4gICAgd2lkdGg6IDMwJTtcbiAgfVxuXG4gIC5jYXJ0LXNlY3Rpb24gLmNhcnQtdGFibGUtcm93IC5jYXJ0LXRhYmxlLXJvdy1yaWdodCB7XG4gICAgd2lkdGg6IDU1JTtcbiAgfVxuXG4gIC5jYXJ0LXNlY3Rpb24gLmNhcnQtdGFibGUtcm93IGltZyB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gIC5jYXJ0LXNlY3Rpb24gLmhhdmUtY29kZS1jb250YWluZXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgLmNhcnQtc2VjdGlvbiAuY2FydC10b3RhbHMge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cblxuICAuY2FydC1zZWN0aW9uIC5jYXJ0LXRvdGFscyAuY2FydC10b3RhbHMtbGVmdCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgfVxuXG4gIC5jYXJ0LXNlY3Rpb24gLmNhcnQtdG90YWxzIC5jYXJ0LXRvdGFscy1yaWdodCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICAuY2hlY2tvdXQtc2VjdGlvbiB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gIH1cblxuICAuY2hlY2tvdXQtc2VjdGlvbiAuY2hlY2tvdXQtdGFibGUtY29udGFpbmVyIHtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgfVxufVxuXG4vKiBTbWFsbCBEZXZpY2VzLCBUYWJsZXRzICovXG5cbi8qIEV4dHJhIFNtYWxsIERldmljZXMsIFBob25lcyAqL1xuXG4vKiBDdXN0b20sIGlQaG9uZSBSZXRpbmEgKi9cblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL2Fzc2V0cy9zYXNzL0Q6L1Byb2dyYW1pcmFuamUvUEhQL0NvZGUvZS1jb21tZXJjZS1sYXJhdmVsL3Jlc3BvbnNpdmUuc2NzcyIsIi8qIExhcmdlIERldmljZXMsIFdpZGUgU2NyZWVucyAqL1xuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEyMDBweCkge1xuICAuY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDk2MHB4O1xuICB9XG59XG5cbi8qIE1lZGl1bSBEZXZpY2VzLCBEZXNrdG9wcyAqL1xuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIGhlYWRlci53aXRoLWJhY2tncm91bmQgLnRvcC1uYXYsXG4gIGhlYWRlciAudG9wLW5hdiB7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG5cbiAgaGVhZGVyLndpdGgtYmFja2dyb3VuZCAudG9wLW5hdiAubG9nbyxcbiAgaGVhZGVyIC50b3AtbmF2IC5sb2dvIHtcbiAgICBtYXJnaW46IGF1dG87XG4gIH1cblxuICBoZWFkZXIud2l0aC1iYWNrZ3JvdW5kIC50b3AtbmF2IHVsLFxuICBoZWFkZXIgLnRvcC1uYXYgdWwge1xuICAgIG1hcmdpbjogMjBweCBhdXRvIDA7XG4gICAgd2lkdGg6IDgwJTtcbiAgfVxuXG4gIGhlYWRlci53aXRoLWJhY2tncm91bmQgLmhlcm8sXG4gIGhlYWRlciAuaGVybyB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG5cbiAgaGVhZGVyLndpdGgtYmFja2dyb3VuZCAuaGVybyAuaGVyby1pbWFnZSxcbiAgaGVhZGVyIC5oZXJvIC5oZXJvLWltYWdlIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXRvcDogNDBweDtcbiAgfVxuXG4gIC5mZWF0dXJlZC1zZWN0aW9uIHtcbiAgICBwYWRkaW5nOiA1MHB4IDA7XG4gIH1cblxuICAuZmVhdHVyZWQtc2VjdGlvbiAucHJvZHVjdHMge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICB9XG5cbiAgLmJsb2ctc2VjdGlvbiAuYmxvZy1wb3N0cyB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwiYmxvZzNcIlxyIFwiYmxvZzJcIlxyIFwiYmxvZzFcIjtcbiAgfVxuXG4gIC5ibG9nLXNlY3Rpb24gLmJsb2ctcG9zdHMgLmJsb2ctcG9zdCB7XG4gICAgbWFyZ2luLXRvcDogMzBweDtcbiAgfVxuXG4gIC5mb290ZXItY29udGVudCB7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG5cbiAgLmZvb3Rlci1jb250ZW50IC5tYWRlLXdpdGgge1xuICAgIG1hcmdpbjogYXV0bztcbiAgfVxuXG4gIC5mb290ZXItY29udGVudCB1bCB7XG4gICAgbWFyZ2luOiAyMHB4IGF1dG87XG4gICAgd2lkdGg6IDYwJTtcbiAgfVxuXG4gIC5icmVhZGNydW1icyB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG5cbiAgLmJyZWFkY3J1bWJzIC5icmVhZGNydW1icy1jb250YWluZXIge1xuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxuXG4gIC5zZWFyY2gtZm9ybSB7XG4gICAgbWFyZ2luOiAxNHB4IGF1dG87XG4gICAgd2lkdGg6IDgwJTtcbiAgfVxuXG4gIC5wcm9kdWN0cy1zZWN0aW9uIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgfVxuXG4gIC5wcm9kdWN0cy1zZWN0aW9uIC5zaWRlYmFyIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICAucHJvZHVjdHMtc2VjdGlvbiAucHJvZHVjdHMge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICB9XG5cbiAgLnByb2R1Y3Qtc2VjdGlvbiB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gIH1cblxuICAubWlnaHQtbGlrZS1zZWN0aW9uIC5taWdodC1saWtlLWdyaWQge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICB9XG5cbiAgLmNhcnQtc2VjdGlvbiB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gIH1cblxuICAuY2FydC1zZWN0aW9uIC5jYXJ0LWJ1dHRvbnMge1xuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICAuY2FydC1zZWN0aW9uIC5jYXJ0LXRhYmxlLXJvdyAuY2FydC10YWJsZS1yb3ctbGVmdCB7XG4gICAgd2lkdGg6IDMwJTtcbiAgfVxuXG4gIC5jYXJ0LXNlY3Rpb24gLmNhcnQtdGFibGUtcm93IC5jYXJ0LXRhYmxlLXJvdy1yaWdodCB7XG4gICAgd2lkdGg6IDU1JTtcbiAgfVxuXG4gIC5jYXJ0LXNlY3Rpb24gLmNhcnQtdGFibGUtcm93IGltZyB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gIC5jYXJ0LXNlY3Rpb24gLmhhdmUtY29kZS1jb250YWluZXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgLmNhcnQtc2VjdGlvbiAuY2FydC10b3RhbHMge1xuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxuXG4gIC5jYXJ0LXNlY3Rpb24gLmNhcnQtdG90YWxzIC5jYXJ0LXRvdGFscy1sZWZ0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB9XG5cbiAgLmNhcnQtc2VjdGlvbiAuY2FydC10b3RhbHMgLmNhcnQtdG90YWxzLXJpZ2h0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIC5jaGVja291dC1zZWN0aW9uIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgfVxuXG4gIC5jaGVja291dC1zZWN0aW9uIC5jaGVja291dC10YWJsZS1jb250YWluZXIge1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICB9XG59XG5cbi8qIFNtYWxsIERldmljZXMsIFRhYmxldHMgKi9cblxuLyogRXh0cmEgU21hbGwgRGV2aWNlcywgUGhvbmVzICovXG5cbi8qIEN1c3RvbSwgaVBob25lIFJldGluYSAqL1xuXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvYXNzZXRzL3Nhc3MvcmVzcG9uc2l2ZS5zY3NzIiwiLyogTGFyZ2UgRGV2aWNlcywgV2lkZSBTY3JlZW5zICovXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEyMDBweCkge1xuICAuY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDk2MHB4O1xuICB9XG59XG5cbi8qIE1lZGl1bSBEZXZpY2VzLCBEZXNrdG9wcyAqL1xuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTJweCkge1xuICBoZWFkZXIud2l0aC1iYWNrZ3JvdW5kIC50b3AtbmF2LCBoZWFkZXIgLnRvcC1uYXYge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbiAgaGVhZGVyLndpdGgtYmFja2dyb3VuZCAudG9wLW5hdiAubG9nbywgaGVhZGVyIC50b3AtbmF2IC5sb2dvIHtcbiAgICBtYXJnaW46IGF1dG87XG4gIH1cbiAgaGVhZGVyLndpdGgtYmFja2dyb3VuZCAudG9wLW5hdiB1bCwgaGVhZGVyIC50b3AtbmF2IHVsIHtcbiAgICBtYXJnaW46IDIwcHggYXV0byAwO1xuICAgIHdpZHRoOiA4MCU7XG4gIH1cbiAgaGVhZGVyLndpdGgtYmFja2dyb3VuZCAuaGVybywgaGVhZGVyIC5oZXJvIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgaGVhZGVyLndpdGgtYmFja2dyb3VuZCAuaGVybyAuaGVyby1pbWFnZSwgaGVhZGVyIC5oZXJvIC5oZXJvLWltYWdlIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXRvcDogNDBweDtcbiAgfVxuICAuZmVhdHVyZWQtc2VjdGlvbiB7XG4gICAgcGFkZGluZzogNTBweCAwO1xuICB9XG4gIC5mZWF0dXJlZC1zZWN0aW9uIC5wcm9kdWN0cyB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gIH1cbiAgLmJsb2ctc2VjdGlvbiAuYmxvZy1wb3N0cyB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwiYmxvZzNcIlxyIFwiYmxvZzJcIlxyIFwiYmxvZzFcIjtcbiAgfVxuICAuYmxvZy1zZWN0aW9uIC5ibG9nLXBvc3RzIC5ibG9nLXBvc3Qge1xuICAgIG1hcmdpbi10b3A6IDMwcHg7XG4gIH1cbiAgLmZvb3Rlci1jb250ZW50IHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG4gIC5mb290ZXItY29udGVudCAubWFkZS13aXRoIHtcbiAgICBtYXJnaW46IGF1dG87XG4gIH1cbiAgLmZvb3Rlci1jb250ZW50IHVsIHtcbiAgICBtYXJnaW46IDIwcHggYXV0bztcbiAgICB3aWR0aDogNjAlO1xuICB9XG4gIC5icmVhZGNydW1icyB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG4gIC5icmVhZGNydW1icyAuYnJlYWRjcnVtYnMtY29udGFpbmVyIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG4gIC5zZWFyY2gtZm9ybSB7XG4gICAgbWFyZ2luOiAxNHB4IGF1dG87XG4gICAgd2lkdGg6IDgwJTtcbiAgfVxuICAucHJvZHVjdHMtc2VjdGlvbiB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gIH1cbiAgLnByb2R1Y3RzLXNlY3Rpb24gLnNpZGViYXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuICAucHJvZHVjdHMtc2VjdGlvbiAucHJvZHVjdHMge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICB9XG4gIC5wcm9kdWN0LXNlY3Rpb24ge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICB9XG4gIC5taWdodC1saWtlLXNlY3Rpb24gLm1pZ2h0LWxpa2UtZ3JpZCB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gIH1cbiAgLmNhcnQtc2VjdGlvbiB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gIH1cbiAgLmNhcnQtc2VjdGlvbiAuY2FydC1idXR0b25zIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuICAuY2FydC1zZWN0aW9uIC5jYXJ0LXRhYmxlLXJvdyAuY2FydC10YWJsZS1yb3ctbGVmdCB7XG4gICAgd2lkdGg6IDMwJTtcbiAgfVxuICAuY2FydC1zZWN0aW9uIC5jYXJ0LXRhYmxlLXJvdyAuY2FydC10YWJsZS1yb3ctcmlnaHQge1xuICAgIHdpZHRoOiA1NSU7XG4gIH1cbiAgLmNhcnQtc2VjdGlvbiAuY2FydC10YWJsZS1yb3cgaW1nIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5jYXJ0LXNlY3Rpb24gLmhhdmUtY29kZS1jb250YWluZXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5jYXJ0LXNlY3Rpb24gLmNhcnQtdG90YWxzIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG4gIC5jYXJ0LXNlY3Rpb24gLmNhcnQtdG90YWxzIC5jYXJ0LXRvdGFscy1sZWZ0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB9XG4gIC5jYXJ0LXNlY3Rpb24gLmNhcnQtdG90YWxzIC5jYXJ0LXRvdGFscy1yaWdodCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgLmNoZWNrb3V0LXNlY3Rpb24ge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICB9XG4gIC5jaGVja291dC1zZWN0aW9uIC5jaGVja291dC10YWJsZS1jb250YWluZXIge1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICB9XG59XG5cbi8qIFNtYWxsIERldmljZXMsIFRhYmxldHMgKi9cbi8qIEV4dHJhIFNtYWxsIERldmljZXMsIFBob25lcyAqL1xuLyogQ3VzdG9tLCBpUGhvbmUgUmV0aW5hICovXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbkpsYzI5MWNtTmxjeTloYzNObGRITXZjMkZ6Y3k5eVpYTndiMjV6YVhabExuTmpjM01pWFN3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUx5b2dUR0Z5WjJVZ1JHVjJhV05sY3l3Z1YybGtaU0JUWTNKbFpXNXpJQ292WEhKY2JrQnRaV1JwWVNCdmJteDVJSE5qY21WbGJpQmhibVFnS0cxaGVDMTNhV1IwYUNBNklERXlNREJ3ZUNrZ2UxeHlYRzRnSUNBZ0xtTnZiblJoYVc1bGNpQjdYSEpjYmlBZ0lDQWdJQ0FnYldGNExYZHBaSFJvT2lBNU5qQndlRHRjY2x4dUlDQWdJSDFjY2x4dVhISmNibjFjY2x4dVhISmNiaThxSUUxbFpHbDFiU0JFWlhacFkyVnpMQ0JFWlhOcmRHOXdjeUFxTDF4eVhHNUFiV1ZrYVdFZ2IyNXNlU0J6WTNKbFpXNGdZVzVrSUNodFlYZ3RkMmxrZEdnZ09pQTVPVEp3ZUNrZ2UxeHlYRzRnSUNBZ2FHVmhaR1Z5TG5kcGRHZ3RZbUZqYTJkeWIzVnVaQ3dnYUdWaFpHVnlJSHRjY2x4dUlDQWdJQ0FnSUNBdWRHOXdMVzVoZGlCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJqYjJ4MWJXNDdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0F1Ykc5bmJ5QjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0WVhKbmFXNDZJR0YxZEc4N1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIVnNJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiam9nTWpCd2VDQmhkWFJ2SURBN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYURvZ09EQWxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDNW9aWEp2SUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWjNKcFpDMTBaVzF3YkdGMFpTMWpiMngxYlc1ek9pQXhabkk3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUM1b1pYSnZMV2x0WVdkbElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQndZV1JrYVc1bkxXeGxablE2SURBN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2JXRnlaMmx1TFhSdmNEb2dOREJ3ZUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0F1Wm1WaGRIVnlaV1F0YzJWamRHbHZiaUI3WEhKY2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnpvZ05UQndlQ0F3TzF4eVhHNWNjbHh1SUNBZ0lDNXdjbTlrZFdOMGN5QjdYSEpjYmlBZ0lDQWdJQ0FnWjNKcFpDMTBaVzF3YkdGMFpTMWpiMngxYlc1ek9pQXhabkk3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQzVpYkc5bkxYTmxZM1JwYjI0Z2UxeHlYRzRnSUNBZ0lDQXVZbXh2Wnkxd2IzTjBjeUI3WEhKY2JpQWdJQ0FnSUNBZ1ozSnBaQzEwWlcxd2JHRjBaUzFqYjJ4MWJXNXpPaUF4Wm5JN1hISmNiaUFnSUNBZ0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh5WEc0Z0lDQWdJQ0FnSUdkeWFXUXRkR1Z0Y0d4aGRHVXRZWEpsWVhNNlhISmNiaUFnSUNBZ0lDQWdJQ0FnSUZ3aVlteHZaek5jSWx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JjSW1Kc2IyY3lYQ0pjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdYQ0ppYkc5bk1Wd2lPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQXVZbXh2Wnkxd2IzTjBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiV0Z5WjJsdUxYUnZjRG9nTXpCd2VEdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnTG1admIzUmxjaTFqYjI1MFpXNTBJSHRjY2x4dUlDQWdJQ0FnSUNCbWJHVjRMV1JwY21WamRHbHZiam9nWTI5c2RXMXVPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQXViV0ZrWlMxM2FYUm9JSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiV0Z5WjJsdU9pQmhkWFJ2TzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2RXd2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0NklESXdjSGdnWVhWMGJ6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2c2SURZd0pUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0xtSnlaV0ZrWTNKMWJXSnpJSHRjY2x4dUlDQWdJQ0FnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUM1aWNtVmhaR055ZFcxaWN5MWpiMjUwWVdsdVpYSWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iR1Y0TFdScGNtVmpkR2x2YmpvZ1kyOXNkVzF1TzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0F1YzJWaGNtTm9MV1p2Y20wZ2UxeHlYRzRnSUNBZ0lDQWdJRzFoY21kcGJqb2dNVFJ3ZUNCaGRYUnZPMXh5WEc0Z0lDQWdJQ0FnSUhkcFpIUm9PaUE0TUNVN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdMbkJ5YjJSMVkzUnpMWE5sWTNScGIyNGdlMXh5WEc0Z0lDQWdJQ0FnSUdkeWFXUXRkR1Z0Y0d4aGRHVXRZMjlzZFcxdWN6b2dNV1p5TzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0F1YzJsa1pXSmhjaUI3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjY2x4dUlDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUM1d2NtOWtkV04wY3lCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdkeWFXUXRkR1Z0Y0d4aGRHVXRZMjlzZFcxdWN6b2dNV1p5TzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0F1Y0hKdlpIVmpkQzF6WldOMGFXOXVJSHRjY2x4dUlDQWdJQ0FnSUNCbmNtbGtMWFJsYlhCc1lYUmxMV052YkhWdGJuTTZJREZtY2p0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQXViV2xuYUhRdGJHbHJaUzF6WldOMGFXOXVJQzV0YVdkb2RDMXNhV3RsTFdkeWFXUWdlMXh5WEc0Z0lDQWdJQ0FnSUdkeWFXUXRkR1Z0Y0d4aGRHVXRZMjlzZFcxdWN6b2dNV1p5TzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDNWpZWEowTFhObFkzUnBiMjRnZTF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0JuY21sa0xYUmxiWEJzWVhSbExXTnZiSFZ0Ym5NNklERm1janRjY2x4dVhISmNiaUFnSUNBZ0lDQWdMbU5oY25RdFluVjBkRzl1Y3lCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJqYjJ4MWJXNDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJQzVqWVhKMExYUmhZbXhsTFhKdmR5QjdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0F1WTJGeWRDMTBZV0pzWlMxeWIzY3RiR1ZtZENCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYURvZ016QWxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0F1WTJGeWRDMTBZV0pzWlMxeWIzY3RjbWxuYUhRZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklEVTFKVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVcxbklIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JwYzNCc1lYazZJRzV2Ym1VN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0F1YUdGMlpTMWpiMlJsTFdOdmJuUmhhVzVsY2lCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNBZ0lDQWdMbU5oY25RdGRHOTBZV3h6SUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm14bGVDMWthWEpsWTNScGIyNDZJR052YkhWdGJqdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQzVqWVhKMExYUnZkR0ZzY3kxc1pXWjBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01qQndlRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTG1OaGNuUXRkRzkwWVd4ekxYSnBaMmgwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JseHlYRzRnSUNBZ0xtTm9aV05yYjNWMExYTmxZM1JwYjI0Z2UxeHlYRzRnSUNBZ0lDQWdJR2R5YVdRdGRHVnRjR3hoZEdVdFkyOXNkVzF1Y3pvZ01XWnlPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQXVZMmhsWTJ0dmRYUXRkR0ZpYkdVdFkyOXVkR0ZwYm1WeUlIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JXRnlaMmx1TFd4bFpuUTZJREV3Y0hnN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc1OVhISmNibHh5WEc0dktpQlRiV0ZzYkNCRVpYWnBZMlZ6TENCVVlXSnNaWFJ6SUNvdlhISmNia0J0WldScFlTQnZibXg1SUhOamNtVmxiaUJoYm1RZ0tHMWhlQzEzYVdSMGFDQTZJRGMyT0hCNEtTQjdYSEpjYmx4eVhHNTlYSEpjYmx4eVhHNHZLaUJGZUhSeVlTQlRiV0ZzYkNCRVpYWnBZMlZ6TENCUWFHOXVaWE1nS2k5Y2NseHVRRzFsWkdsaElHOXViSGtnYzJOeVpXVnVJR0Z1WkNBb2JXRjRMWGRwWkhSb0lEb2dORGd3Y0hncElIdGNjbHh1WEhKY2JuMWNjbHh1WEhKY2JpOHFJRU4xYzNSdmJTd2dhVkJvYjI1bElGSmxkR2x1WVNBcUwxeHlYRzVBYldWa2FXRWdiMjVzZVNCelkzSmxaVzRnWVc1a0lDaHRZWGd0ZDJsa2RHZ2dPaUF6TWpCd2VDa2dlMXh5WEc1Y2NseHVmVnh5WEc0aVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNhVU5CUVdsRE8wRkJRMnBETEUxQlFVMHNUVUZCVFN4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFMUJRVTA3UlVGRGNrTXNRVUZCUVN4VlFVRlZMRU5CUVVNN1NVRkRVQ3hUUVVGVExFVkJRVVVzUzBGQlN6dEhRVU51UWpzN08wRkJTVXdzT0VKQlFUaENPMEZCUXpsQ0xFMUJRVTBzVFVGQlRTeE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRkRjRU1zUVVGRFNTeE5RVVJGTEVGQlFVRXNaMEpCUVdkQ0xFTkJRMnhDTEZGQlFWRXNSVUZFV1N4TlFVRk5MRU5CUXpGQ0xGRkJRVkVzUTBGQlF6dEpRVU5NTEdOQlFXTXNSVUZCUlN4TlFVRk5PMGRCVlhwQ08wVkJXa3dzUVVGSlVTeE5RVXBHTEVGQlFVRXNaMEpCUVdkQ0xFTkJRMnhDTEZGQlFWRXNRMEZIU2l4TFFVRkxMRVZCU2xjc1RVRkJUU3hEUVVNeFFpeFJRVUZSTEVOQlIwb3NTMEZCU3l4RFFVRkRPMGxCUTBZc1RVRkJUU3hGUVVGRkxFbEJRVWs3UjBGRFpqdEZRVTVVTEVGQlVWRXNUVUZTUml4QlFVRkJMR2RDUVVGblFpeERRVU5zUWl4UlFVRlJMRU5CVDBvc1JVRkJSU3hGUVZKakxFMUJRVTBzUTBGRE1VSXNVVUZCVVN4RFFVOUtMRVZCUVVVc1EwRkJRenRKUVVORExFMUJRVTBzUlVGQlJTeFhRVUZYTzBsQlEyNUNMRXRCUVVzc1JVRkJSU3hIUVVGSE8wZEJRMkk3UlVGWVZDeEJRV0ZKTEUxQllrVXNRVUZCUVN4blFrRkJaMElzUTBGaGJFSXNTMEZCU3l4RlFXSmxMRTFCUVUwc1EwRmhNVUlzUzBGQlN5eERRVUZETzBsQlEwWXNjVUpCUVhGQ0xFVkJRVVVzUjBGQlJ6dEpRVU14UWl4VlFVRlZMRVZCUVVVc1RVRkJUVHRIUVUxeVFqdEZRWEpDVEN4QlFXbENVU3hOUVdwQ1JpeEJRVUZCTEdkQ1FVRm5RaXhEUVdGc1FpeExRVUZMTEVOQlNVUXNWMEZCVnl4RlFXcENTeXhOUVVGTkxFTkJZVEZDTEV0QlFVc3NRMEZKUkN4WFFVRlhMRU5CUVVNN1NVRkRWaXhaUVVGWkxFVkJRVVVzUTBGQlF6dEpRVU5tTEZWQlFWVXNSVUZCUlN4SlFVRkpPMGRCUTJwQ08wVkJTVlFzUVVGQlFTeHBRa0ZCYVVJc1EwRkJRenRKUVVOa0xFOUJRVThzUlVGQlJTeE5RVUZOTzBkQlMyeENPMFZCVGtRc1FVRkhRU3hwUWtGSWFVSXNRMEZIYWtJc1UwRkJVeXhEUVVGRE8wbEJRMDRzY1VKQlFYRkNMRVZCUVVVc1IwRkJSenRIUVVONlFqdEZRVWRNTEVGQlEwVXNZVUZFVnl4RFFVTllMRmRCUVZjc1EwRkJRenRKUVVOV0xIRkNRVUZ4UWl4RlFVRkZMRWRCUVVjN1NVRkRNVUlzVlVGQlZTeEZRVUZGTEUxQlFVMDdTVUZEYkVJc2JVSkJRVzFDTEVWQlEyWXNlVUpCUlU4N1IwRk5XanRGUVdKSUxFRkJVMGtzWVVGVVV5eERRVU5ZTEZkQlFWY3NRMEZSVkN4VlFVRlZMRU5CUVVNN1NVRkRVQ3hWUVVGVkxFVkJRVVVzU1VGQlNUdEhRVU51UWp0RlFVdE1MRUZCUVVFc1pVRkJaU3hEUVVGRE8wbEJRMW9zWTBGQll5eEZRVUZGTEUxQlFVMDdSMEZWZWtJN1JVRllSQ3hCUVVkSkxHVkJTRmNzUTBGSFdDeFZRVUZWTEVOQlFVTTdTVUZEVUN4TlFVRk5MRVZCUVVVc1NVRkJTVHRIUVVObU8wVkJURXdzUVVGUFNTeGxRVkJYTEVOQlQxZ3NSVUZCUlN4RFFVRkRPMGxCUTBNc1RVRkJUU3hGUVVGRkxGTkJRVk03U1VGRGFrSXNTMEZCU3l4RlFVRkZMRWRCUVVjN1IwRkRZanRGUVVkTUxFRkJRVUVzV1VGQldTeERRVUZETzBsQlExUXNWVUZCVlN4RlFVRkZMRTFCUVUwN1IwRkxja0k3UlVGT1JDeEJRVWRKTEZsQlNGRXNRMEZIVWl4elFrRkJjMElzUTBGQlF6dEpRVU51UWl4alFVRmpMRVZCUVVVc1RVRkJUVHRIUVVONlFqdEZRVWRNTEVGQlFVRXNXVUZCV1N4RFFVRkRPMGxCUTFRc1RVRkJUU3hGUVVGRkxGTkJRVk03U1VGRGFrSXNTMEZCU3l4RlFVRkZMRWRCUVVjN1IwRkRZanRGUVVWRUxFRkJRVUVzYVVKQlFXbENMRU5CUVVNN1NVRkRaQ3h4UWtGQmNVSXNSVUZCUlN4SFFVRkhPMGRCVXpkQ08wVkJWa1FzUVVGSFNTeHBRa0ZJWVN4RFFVZGlMRkZCUVZFc1EwRkJRenRKUVVOTUxGVkJRVlVzUlVGQlJTeE5RVUZOTzBkQlEzSkNPMFZCVEV3c1FVRlBTU3hwUWtGUVlTeERRVTlpTEZOQlFWTXNRMEZCUXp0SlFVTk9MSEZDUVVGeFFpeEZRVUZGTEVkQlFVYzdSMEZETjBJN1JVRkhUQ3hCUVVGQkxHZENRVUZuUWl4RFFVRkRPMGxCUTJJc2NVSkJRWEZDTEVWQlFVVXNSMEZCUnp0SFFVTTNRanRGUVVWRUxFRkJRVUVzYlVKQlFXMUNMRU5CUVVNc1owSkJRV2RDTEVOQlFVTTdTVUZEYWtNc2NVSkJRWEZDTEVWQlFVVXNSMEZCUnp0SFFVTTNRanRGUVVWRUxFRkJRVUVzWVVGQllTeERRVUZETzBsQlJWWXNjVUpCUVhGQ0xFVkJRVVVzUjBGQlJ6dEhRWGRETjBJN1JVRXhRMFFzUVVGSlNTeGhRVXBUTEVOQlNWUXNZVUZCWVN4RFFVRkRPMGxCUTFZc1kwRkJZeXhGUVVGRkxFMUJRVTA3U1VGRGRFSXNWVUZCVlN4RlFVRkZMRTFCUVUwN1IwRkRja0k3UlVGUVRDeEJRVmRSTEdGQldFc3NRMEZUVkN4bFFVRmxMRU5CUlZnc2IwSkJRVzlDTEVOQlFVTTdTVUZEYWtJc1MwRkJTeXhGUVVGRkxFZEJRVWM3UjBGRFlqdEZRV0pVTEVGQlpWRXNZVUZtU3l4RFFWTlVMR1ZCUVdVc1EwRk5XQ3h4UWtGQmNVSXNRMEZCUXp0SlFVTnNRaXhMUVVGTExFVkJRVVVzUjBGQlJ6dEhRVU5pTzBWQmFrSlVMRUZCYlVKUkxHRkJia0pMTEVOQlUxUXNaVUZCWlN4RFFWVllMRWRCUVVjc1EwRkJRenRKUVVOQkxFOUJRVThzUlVGQlJTeEpRVUZKTzBkQlEyaENPMFZCY2tKVUxFRkJlVUpKTEdGQmVrSlRMRU5CZVVKVUxHOUNRVUZ2UWl4RFFVRkRPMGxCUTJwQ0xFdEJRVXNzUlVGQlJTeEpRVUZKTzBkQlEyUTdSVUV6UWt3c1FVRTJRa2tzWVVFM1FsTXNRMEUyUWxRc1dVRkJXU3hEUVVGRE8wbEJRMVFzWTBGQll5eEZRVUZGTEUxQlFVMDdSMEZWZWtJN1JVRjRRMHdzUVVGblExRXNZVUZvUTBzc1EwRTJRbFFzV1VGQldTeERRVWRTTEdsQ1FVRnBRaXhEUVVGRE8wbEJRMlFzUzBGQlN5eEZRVUZGTEVsQlFVazdTVUZEV0N4aFFVRmhMRVZCUVVVc1NVRkJTVHRIUVVOMFFqdEZRVzVEVkN4QlFYRkRVU3hoUVhKRFN5eERRVFpDVkN4WlFVRlpMRU5CVVZJc2EwSkJRV3RDTEVOQlFVTTdTVUZEWml4TFFVRkxMRVZCUVVVc1NVRkJTVHRIUVVOa08wVkJUVlFzUVVGQlFTeHBRa0ZCYVVJc1EwRkJRenRKUVVOa0xIRkNRVUZ4UWl4RlFVRkZMRWRCUVVjN1IwRkxOMEk3UlVGT1JDeEJRVWRKTEdsQ1FVaGhMRU5CUjJJc2VVSkJRWGxDTEVOQlFVTTdTVUZEZEVJc1YwRkJWeXhGUVVGRkxFbEJRVWs3UjBGRGNFSTdPenRCUVVsVUxEUkNRVUUwUWp0QlFVczFRaXhwUTBGQmFVTTdRVUZMYWtNc01rSkJRVEpDSW4wPSAqL1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Jlc291cmNlcy9hc3NldHMvc2Fzcy9EOi9Qcm9ncmFtaXJhbmplL1BIUC9Db2RlL2UtY29tbWVyY2UtbGFyYXZlbC9yZXNvdXJjZXMvYXNzZXRzL3Nhc3MvcmVzcG9uc2l2ZS5zY3NzIl0sInNvdXJjZVJvb3QiOiIifQ==*/